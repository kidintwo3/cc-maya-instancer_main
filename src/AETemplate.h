//
//  AETemplates.h
//  shellMod
//
//  Created by Hunyadi János on 2015. 01. 03..
//  Copyright (c) 2015. Janos Hunyadi. All rights reserved.
//

#ifndef MELSCRIPTS_H
#define MELSCRIPTS_H

#include <maya/MString.h>


MString mel_AETemplate()
{
	MString s_aeTemplate = MString() +  "deleteUI AttrEdclonerMultiFormLayout;\r\n"
		"global proc AEclonerMultiTemplate( string $nodeName )\r\n"
		"{\r\n"
		"	\r\n"
		"	//print $nodeName;\r\n"
		"	\r\n"
		"	editorTemplate -beginScrollLayout;\r\n"
		"	\r\n"
		"	editorTemplate -beginLayout \"ClonerMulti instance settings\" -collapse 0;\r\n"
		"	editorTemplate -addControl \"instanceType\";\r\n"
		"	editorTemplate -addControl \"patternType\";\r\n"
		"	editorTemplate -addControl \"scatterType\";\r\n"
		"	editorTemplate -addSeparator;\r\n"
		"	editorTemplate -addControl \"id\";\r\n"
		"	editorTemplate -addSeparator;\r\n"
		"	editorTemplate -addControl \"reversePattern\";\r\n"
		"	editorTemplate -endLayout;\r\n"
		"	\r\n"
		"	editorTemplate -beginLayout \"Random Pattern Settings\" -collapse 1;	\r\n"
		"	editorTemplate -label \"Pattern Seed\" -addControl \"randomSeed\";\r\n"
		"	editorTemplate -addSeparator;\r\n"
		"	editorTemplate -label \"Gap Amount\" -addControl \"randomIDGapLevel\";\r\n"
		"	editorTemplate -addSeparator;\r\n"
		"	editorTemplate -endLayout;\r\n"
		"	\r\n"
		"	editorTemplate -beginLayout \"Instance count\" -collapse 0;	\r\n"
		"	editorTemplate -addControl \"instanceX\";\r\n"
		"	editorTemplate -addControl \"instanceY\";\r\n"
		"	editorTemplate -addControl \"instanceZ\";\r\n"
		"	editorTemplate -endLayout;\r\n"
		"	\r\n"
		"	// -------------------------------------------------------------\r\n"
		"	\r\n"
		"	editorTemplate -beginLayout \"Input objects\" -collapse 0;	\r\n"
		"	editorTemplate -callCustom \"AE_cm_objList_create\" \"AE_cm_objList_edit\" \"\";\r\n"
		"	editorTemplate -callCustom \"AE_cm_abLoc_create\" \"AE_cm_abLoc_edit\" \"\";\r\n"
		"	editorTemplate -addSeparator;\r\n"
		"	editorTemplate -addControl \"mergeInputMeshes\";\r\n"
		"	editorTemplate -endLayout;\r\n"
		"	\r\n"
		"	\r\n"
		"	\r\n"
		"	// -------------------------------------------------------------\r\n"
		"	\r\n"
		"	editorTemplate -beginLayout \"Primary Transform\" -collapse 0;\r\n"
		"	\r\n"
		"	editorTemplate -addSeparator;\r\n"
		"	editorTemplate -label \"World Space Input\" -addControl \"worldSpace\";\r\n"
		"	editorTemplate -addSeparator;\r\n"
		"	\r\n"
		"	editorTemplate -addControl \"offsetX\";\r\n"
		"	editorTemplate -addControl \"offsetY\";\r\n"
		"	editorTemplate -addControl \"offsetZ\";\r\n"
		"	editorTemplate -addSeparator;\r\n"
		"	\r\n"
		"	editorTemplate -addControl \"rotateX\";\r\n"
		"	editorTemplate -addControl \"rotateY\";\r\n"
		"	editorTemplate -addControl \"rotateZ\";\r\n"
		"	editorTemplate -addSeparator;\r\n"
		"	\r\n"
		"	editorTemplate -addControl \"scaleX\";\r\n"
		"	editorTemplate -addControl \"scaleY\";\r\n"
		"	editorTemplate -addControl \"scaleZ\";\r\n"
		"	editorTemplate -addSeparator;\r\n"
		"	\r\n"
		"	editorTemplate -endLayout;\r\n"
		"	\r\n"
		"	\r\n"
		"	// -------------------------------------------------------------\r\n"
		"	\r\n"
		"	editorTemplate -beginLayout \"Output Mesh Settings\" -collapse 0;\r\n"
		"	editorTemplate -addControl \"smoothNormals\";\r\n"
		"	editorTemplate -addSeparator;\r\n"
		"    editorTemplate -addControl \"reverseNormals\";\r\n"
		"	editorTemplate -addSeparator;\r\n"
		"	editorTemplate -label \"Up Vector\" -addControl \"firstUpVec\";\r\n"
		"	editorTemplate -endLayout;\r\n"
		"	\r\n"
		"	// -------------------------------------------------------------\r\n"
		"	\r\n"
		"	editorTemplate -suppress \"inMesh\";\r\n"
		"	editorTemplate -suppress \"inCurve\";\r\n"
		"	editorTemplate -suppress \"referenceMesh\";\r\n"
		"	editorTemplate -suppress \"outMesh\";\r\n"
		"	editorTemplate -suppress \"locatorAPos\";\r\n"
		"	editorTemplate -suppress \"locatorBPos\";\r\n"
		"	\r\n"
		"	\r\n"
		"	AEdependNodeTemplate $nodeName;\r\n"
		"	editorTemplate -addExtraControls;\r\n"
		"	editorTemplate -endScrollLayout;\r\n"
		"	\r\n"
		"	\r\n"
		"}\r\n"
		"global proc AE_cm_objList_create(string $attrName)\r\n"
		"{\r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    \r\n"
		"    \r\n"
		"	textScrollList -allowMultiSelection false -h 120 \"cm_list_objList\";\r\n"
		"    \r\n"
		"    setParent ..;\r\n"
		"    \r\n"
		"    separator -height 10 -style \"in\";\r\n"
		"    \r\n"
		"    gridLayout -cwh 100 18 -numberOfColumns 4 -bgc 0.2 0.2 0.2;\r\n"
		"	iconTextButton -style \"iconAndTextHorizontal\" -image1 \"shellModNode_Plus.png\" -label \"add\" -bgc 0.4 0.4 0.4 -c  (\"AE_cm_objList_add \" + $nodeName[0] ) \"cm_b_add\";\r\n"
		"	iconTextButton -style \"iconAndTextHorizontal\" -image1 \"shellModNode_Minus.png\" -label \"remove\" -bgc 0.6 0.2 0.3 -c  (\"AE_cm_objList_remove \" + $nodeName[0] ) \"cm_b_rem\";\r\n"
		"	iconTextButton -style \"iconAndTextHorizontal\" -image1 \"shellModNode_Plus.png\" -label \"up\" -bgc 0.2 0.2 0.2 -c (\"AE_cm_objList_moveUp \" + $nodeName[0] ) \"cm_b_up\";\r\n"
		"	iconTextButton -style \"iconAndTextHorizontal\" -image1 \"shellModNode_Minus.png\" -label \"down\" -bgc 0.2 0.2 0.2 -c  (\"AE_cm_objList_moveDown \" + $nodeName[0] ) \"cm_b_down\";\r\n"
		"	//iconTextButton -style \"iconAndTextHorizontal\" -image1 \"nudgeRight.png\" -label \"Refesh\" -bgc 0.3 0.4 0.4 -c  (\"AE_cm_objList_refresh \" + $nodeName[0] ) \"cm_b_refr\";\r\n"
		"	setParent ..;\r\n"
		"	\r\n"
		"	separator -height 5 -style \"in\";\r\n"
		"	iconTextButton -style \"iconAndTextHorizontal\" -image1 \"shellModNode_Refresh.png\" -label \"Refesh list\" -bgc 0.3 0.4 0.4 -c  (\"AE_cm_objList_refresh \" + $nodeName[0] ) \"cm_b_refr\";\r\n"
		"    separator -height 5 -style \"in\";\r\n"
		"    //setParent ..;\r\n"
		"    \r\n"
		"	gridLayout -numberOfColumns 3 -cellWidthHeight 100 18 -bgc 0.2 0.2 0.2;\r\n"
		"	text -label \"Reference object\";\r\n"
		"	textField -bgc 0.3 0.3 0.3 -ed false -tx \"none\" \"cm_t_driverObj\";\r\n"
		"	iconTextButton -style \"iconAndTextHorizontal\" -image1 \"shellModNode_Apply.png\" -label \"Set ref object\" -c  (\"AE_cm_reference_set \" + $nodeName[0] ) \"cm_b_setRef\";\r\n"
		"    //separator -height 5 -style \"in\";\r\n"
		"    \r\n"
		"    // Refresh list\r\n"
		"    \r\n"
		"    \r\n"
		"    AE_cm_objList_refresh($nodeName[0]);\r\n"
		"    // Create callback\r\n"
		"    \r\n"
		"    //scriptJob -kws true -attributeChange \"clonerMulti_node1.instanceX\" \"AE_cm_whatever()\";\r\n"
		"    scriptJob -rp -kws -p \"AttrEdclonerMultiFormLayout\" -connectionChange ($nodeName[0]+\".inMesh\") (\"AE_cm_objList_refresh \" + $nodeName[0] );\r\n"
		"    \r\n"
		"    // collect refmesh Name\r\n"
		"    string $refMeshAttr = $nodeName[0] + \".referenceMesh\";\r\n"
		"    string $refMeshShapePlug = `connectionInfo -sourceFromDestination $refMeshAttr`;\r\n"
		"    string $refMeshShape[];\r\n"
		"    tokenize($refMeshShapePlug, \".\", $refMeshShape);\r\n"
		"    \r\n"
		"    if ($refMeshShape[0] != \"\")\r\n"
		"    {\r\n"
		"	    textField -edit -bgc 0.6 0.6 0.8 -tx $refMeshShape[0] \"cm_t_driverObj\";\r\n"
		"	}\r\n"
		"    \r\n"
		"}\r\n"
		"global proc AE_cm_objList_edit(string $attrName)\r\n"
		"{\r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    \r\n"
		"    iconTextButton -edit -c (\"AE_cm_objList_add \" + $nodeName[0] ) \"cm_b_add\";\r\n"
		"	iconTextButton -edit -c (\"AE_cm_objList_remove \" + $nodeName[0] ) \"cm_b_rem\";\r\n"
		"	iconTextButton -edit -c (\"AE_cm_objList_moveUp \" + $nodeName[0] ) \"cm_b_up\";\r\n"
		"	iconTextButton -edit -c (\"AE_cm_objList_moveDown \" + $nodeName[0] ) \"cm_b_down\";\r\n"
		"	iconTextButton -edit -c (\"AE_cm_objList_refresh \" + $nodeName[0] ) \"cm_b_refr\";\r\n"
		"	\r\n"
		"	// collect refmesh Name\r\n"
		"    string $refMeshAttr = $nodeName[0] + \".referenceMesh\";\r\n"
		"    string $refMeshShapePlug = `connectionInfo -sourceFromDestination $refMeshAttr`;\r\n"
		"    string $refMeshShape[];\r\n"
		"    tokenize($refMeshShapePlug, \".\", $refMeshShape);\r\n"
		"    \r\n"
		"    textField -edit -bgc 0.3 0.3 0.3 -tx \"none\" \"cm_t_driverObj\";\r\n"
		"    \r\n"
		"    if ($refMeshShape[0] != \"\")\r\n"
		"    {\r\n"
		"	    textField -edit -bgc 0.6 0.6 0.8 -tx $refMeshShape[0] \"cm_t_driverObj\";\r\n"
		"	}\r\n"
		"	\r\n"
		"	scriptJob -rp -kws -p \"AttrEdclonerMultiFormLayout\" -connectionChange ($nodeName[0]+\".inMesh\") (\"AE_cm_objList_refresh \" + $nodeName[0] );\r\n"
		"	\r\n"
		"	AE_cm_objList_refresh($attrName);\r\n"
		"   \r\n"
		"}\r\n"
		"global proc AE_cm_objList_add(string $attrName)\r\n"
		"{\r\n"
		"    \r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    \r\n"
		"    \r\n"
		"    string $selObj[] = `ls -sl -o -tr`;\r\n"
		"    string $selObjShape[];\r\n"
		"    \r\n"
		"    int $numObj = size($selObj);\r\n"
		"    \r\n"
		"    if ($numObj != 0)\r\n"
		"    {\r\n"
		"        string $goalAttr = \"\";\r\n"
		"        string $sourceAttr = \"\";\r\n"
		"        \r\n"
		"        // Check if we are trying to add the output mesh\r\n"
		"        \r\n"
		"        string $outMeshAttr = $nodeName[0] + \".outMesh\";\r\n"
		"        string $outMeshShapePlug[] = `connectionInfo -destinationFromSource $outMeshAttr`;\r\n"
		"        \r\n"
		"        if (size($outMeshShapePlug) != 0)\r\n"
		"        {\r\n"
		"            string $outMeshShape[];\r\n"
		"            tokenize($outMeshShapePlug[0], \".\", $outMeshShape);\r\n"
		"            string $parents[] = `listRelatives -ni -path -parent $outMeshShape[0]`;\r\n"
		"            \r\n"
		"            \r\n"
		"            int $plugSize = `getAttr -size ($nodeName[0] + \".inMesh\")`;\r\n"
		"            \r\n"
		"            for( $i=0; $i< $plugSize; ++$i )\r\n"
		"            {\r\n"
		"                $goalAttr = $nodeName[0] + \".inMesh[\" + $i + \"]\";\r\n"
		"                $sourceAttr = `connectionInfo -sfd $goalAttr`;\r\n"
		"                \r\n"
		"                if($sourceAttr != \"\")\r\n"
		"                {\r\n"
		"                    disconnectAttr $sourceAttr $goalAttr;\r\n"
		"                }\r\n"
		"            }\r\n"
		"            \r\n"
		"            string $listMeshes[] = `textScrollList -query -ai \"cm_list_objList\"`;\r\n"
		"            int $cc_count = 0;\r\n"
		"            \r\n"
		"            for( $i=0; $i<size($listMeshes); ++$i )\r\n"
		"            {\r\n"
		"                 connectAttr -f ( $listMeshes[$i] + \".worldMesh[0]\") ( $nodeName[0] + \".inMesh[\" + $i + \"]\");\r\n"
		"                 $cc_count +=1;\r\n"
		"            }\r\n"
		"            \r\n"
		"            // getAttr -mi clonerMulti_node1.inMesh;\r\n"
		"            \r\n"
		"            // string $inputMeshes[] = `listConnections -s true -p true ($attrName + \".inMesh\")`;\r\n"
		"            \r\n"
		"            \r\n"
		"            for( $i=0; $i < $numObj; ++$i )\r\n"
		"            {\r\n"
		"                \r\n"
		"                if($selObj[$i] != $parents[0])\r\n"
		"                {\r\n"
		"                    $selObjShape = `listRelatives -shapes $selObj[$i]`;\r\n"
		"                    connectAttr -f ( $selObjShape[0] + \".worldMesh[0]\") ( $nodeName[0] + \".inMesh[\" + ($i + ($cc_count)) + \"]\");\r\n"
		"                }\r\n"
		"            }\r\n"
		"            \r\n"
		"            AE_cm_objList_refresh($nodeName[0]);\r\n"
		"        }\r\n"
		"        \r\n"
		"        if (size($outMeshShapePlug) == 0)\r\n"
		"        {\r\n"
		"            warning -n \"[ClonerMulti] ClonerMulti node does not have an output mesh!\"; \r\n"
		"        }\r\n"
		"        \r\n"
		"    }\r\n"
		"    \r\n"
		"    \r\n"
		"}\r\n"
		"global proc AE_cm_objList_remove(string $attrName)\r\n"
		"{\r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    \r\n"
		"    string $goalAttr = \"\";\r\n"
		"    string $sourceAttr = \"\";\r\n"
		"    \r\n"
		"    int $selIdx[] = `textScrollList -query -sii \"cm_list_objList\"`;\r\n"
		"    \r\n"
		"    if (`size($selIdx)` != 0)\r\n"
		"    {\r\n"
		"        int $plugSize = `getAttr -size ($nodeName[0] + \".inMesh\")`;\r\n"
		"        \r\n"
		"        for( $i=0; $i< $plugSize; ++$i )\r\n"
		"        {\r\n"
		"            $goalAttr = $nodeName[0] + \".inMesh[\" + $i + \"]\";\r\n"
		"            $sourceAttr = `connectionInfo -sfd $goalAttr`;\r\n"
		"            \r\n"
		"            if($sourceAttr != \"\")\r\n"
		"            {\r\n"
		"                disconnectAttr $sourceAttr $goalAttr;\r\n"
		"            }\r\n"
		"        }\r\n"
		"        \r\n"
		"        //if ($selIdx[0]-1 != 0 )\r\n"
		"        //{\r\n"
		"            textScrollList -edit -rii $selIdx[0] \"cm_list_objList\";\r\n"
		"            \r\n"
		"            string $listMeshes[] = `textScrollList -query -ai \"cm_list_objList\"`;\r\n"
		"            int $cc_count = 0;\r\n"
		"            \r\n"
		"            for( $i=0; $i<size($listMeshes); ++$i )\r\n"
		"            {\r\n"
		"                 connectAttr -f ( $listMeshes[$i] + \".worldMesh[0]\") ( $nodeName[0] + \".inMesh[\" + $i + \"]\");\r\n"
		"                 $cc_count +=1;\r\n"
		"            }\r\n"
		"        //}\r\n"
		"    }\r\n"
		"    AE_cm_objList_refresh($attrName);\r\n"
		"    \r\n"
		"}\r\n"
		"global proc AE_cm_objList_moveUp(string $attrName)\r\n"
		"{\r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    \r\n"
		"    int $selIdx[] = `textScrollList -query -sii \"cm_list_objList\"`;\r\n"
		"    \r\n"
		"    if (`size($selIdx)` != 0)\r\n"
		"    {\r\n"
		"        if ($selIdx[0]-1 != 0)\r\n"
		"        {\r\n"
		"            \r\n"
		"            string $listObjects[] = `textScrollList -query -ai \"cm_list_objList\"`;\r\n"
		"            string $listCurrOjb = $listObjects[$selIdx[0]-1];\r\n"
		"        \r\n"
		"            \r\n"
		"            //AE_cm_objList_refresh($attrName);\r\n"
		"            string $listObjects[] = `textScrollList -query -ai \"cm_list_objList\"`;\r\n"
		"            \r\n"
		"            textScrollList -edit -rii ($selIdx[0]) \"cm_list_objList\";\r\n"
		"            textScrollList -edit -ap ($selIdx[0]-1) $listCurrOjb \"cm_list_objList\";\r\n"
		"            \r\n"
		"            string $listObjects[] = `textScrollList -query -ai \"cm_list_objList\"`;\r\n"
		"            \r\n"
		"            textScrollList -edit -sii ($selIdx[0]-1) \"cm_list_objList\";\r\n"
		"        }\r\n"
		"        \r\n"
		"        else\r\n"
		"        {\r\n"
		"            textScrollList -edit -sii ($selIdx[0]) \"cm_list_objList\";  \r\n"
		"        }\r\n"
		"        \r\n"
		"        \r\n"
		"        AE_cm_reconnectPlugs_set($attrName);\r\n"
		"    }\r\n"
		"    \r\n"
		"}\r\n"
		"global proc AE_cm_objList_moveDown(string $attrName)\r\n"
		"{\r\n"
		"    \r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    \r\n"
		"    int $selIdx[] = `textScrollList -query -sii \"cm_list_objList\"`;\r\n"
		"    \r\n"
		"    if (`size($selIdx)` != 0)\r\n"
		"    {\r\n"
		"        int $numIndx = `textScrollList -query -ni \"cm_list_objList\"`;\r\n"
		"        \r\n"
		"        \r\n"
		"        if ($selIdx[0]-1 < $numIndx-1)\r\n"
		"        {\r\n"
		"            string $listObjects[] = `textScrollList -query -ai \"cm_list_objList\"`;\r\n"
		"            string $listCurrOjb = $listObjects[$selIdx[0]-1];\r\n"
		"            \r\n"
		"            //AE_cm_objList_refresh($attrName);\r\n"
		"            string $listObjects[] = `textScrollList -query -ai \"cm_list_objList\"`;\r\n"
		"            \r\n"
		"            textScrollList -edit -rii ($selIdx[0]) \"cm_list_objList\";\r\n"
		"            textScrollList -edit -ap ($selIdx[0]+1) $listCurrOjb \"cm_list_objList\";\r\n"
		"            \r\n"
		"            string $listObjects[] = `textScrollList -query -ai \"cm_list_objList\"`;\r\n"
		"            \r\n"
		"            textScrollList -edit -sii ($selIdx[0]+1) \"cm_list_objList\";\r\n"
		"        }\r\n"
		"        \r\n"
		"        else\r\n"
		"        {\r\n"
		"            textScrollList -edit -sii ($selIdx[0]) \"cm_list_objList\";  \r\n"
		"        }\r\n"
		"        \r\n"
		"        AE_cm_reconnectPlugs_set($attrName);\r\n"
		"    }\r\n"
		"}\r\n"
		"global proc AE_cm_reconnectPlugs_set(string $attrName)\r\n"
		"{\r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    \r\n"
		"    int $plugSize = `getAttr -size ($nodeName[0] + \".inMesh\")`;\r\n"
		"    \r\n"
		"    for( $i=0; $i< $plugSize; ++$i )\r\n"
		"    {\r\n"
		"        $goalAttr = $nodeName[0] + \".inMesh[\" + $i + \"]\";\r\n"
		"        $sourceAttr = `connectionInfo -sfd $goalAttr`;\r\n"
		"        \r\n"
		"        if($sourceAttr != \"\")\r\n"
		"        {\r\n"
		"            disconnectAttr $sourceAttr $goalAttr;\r\n"
		"        }\r\n"
		"    }\r\n"
		"    \r\n"
		"    string $listMeshes[] = `textScrollList -query -ai \"cm_list_objList\"`;\r\n"
		"    int $cc_count = 0;\r\n"
		"    \r\n"
		"    for( $i=0; $i<size($listMeshes); ++$i )\r\n"
		"    {\r\n"
		"         \r\n"
		"         string $list_shapes[] = `listRelatives -ni -pa -shapes $listMeshes[$i]`;\r\n"
		"         connectAttr -f ( $list_shapes[0] + \".worldMesh[0]\") ( $nodeName[0] + \".inMesh[\" + $i + \"]\");\r\n"
		"         \r\n"
		"         $cc_count +=1;\r\n"
		"    }\r\n"
		"    \r\n"
		"    AE_cm_objList_refresh($attrName);\r\n"
		"}\r\n"
		"global proc AE_cm_reference_set(string $attrName)\r\n"
		"{\r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    \r\n"
		"    int $isSame = 0;\r\n"
		"    \r\n"
		"    string $selObj[] = `ls -sl -o -tr`;\r\n"
		"    string $selObjShape[];\r\n"
		"    \r\n"
		"    if (size($selObj) != 0)\r\n"
		"    {\r\n"
		"        $selObjShape = `listRelatives  -type \"mesh\" -shapes $selObj[0]`;\r\n"
		"        \r\n"
		"        \r\n"
		"        // Check if we are trying to add the output mesh\r\n"
		"        \r\n"
		"        string $goalAttr = \"\";\r\n"
		"        string $sourceAttr = \"\";\r\n"
		"        \r\n"
		"        string $outMeshAttr = $nodeName[0] + \".outMesh\";\r\n"
		"        string $outMeshShapePlug[] = `connectionInfo -destinationFromSource $outMeshAttr`;\r\n"
		"        string $outMeshShape[];\r\n"
		"        tokenize($outMeshShapePlug[0], \".\", $outMeshShape);\r\n"
		"        string $parents[] = `listRelatives -ni -path -parent $outMeshShape[0]`;\r\n"
		"        \r\n"
		"        //\r\n"
		"        \r\n"
		"        if($selObjShape[0] == $outMeshShape[0])\r\n"
		"        {\r\n"
		"            $isSame = 1;\r\n"
		"        }\r\n"
		"        \r\n"
		"        int $plugSize = `getAttr -size ($nodeName[0] + \".inMesh\")`;\r\n"
		"        \r\n"
		"        string $inMeshShape[];\r\n"
		"        \r\n"
		"        for( $i=0; $i< $plugSize; ++$i )\r\n"
		"        {\r\n"
		"            $goalAttr = $nodeName[0] + \".inMesh[\" + $i + \"]\";\r\n"
		"            $sourceAttr = `connectionInfo -sfd $goalAttr`;\r\n"
		"            \r\n"
		"            \r\n"
		"            \r\n"
		"            if($sourceAttr != \"\")\r\n"
		"            {\r\n"
		"                tokenize($sourceAttr, \".\", $inMeshShape);\r\n"
		"                \r\n"
		"                if($selObjShape[0] == $inMeshShape[0])\r\n"
		"                {\r\n"
		"                    $isSame = 1;\r\n"
		"                }\r\n"
		"                \r\n"
		"                \r\n"
		"            }\r\n"
		"        }\r\n"
		"        \r\n"
		"        //\r\n"
		"        \r\n"
		"        if($isSame == 0)\r\n"
		"        {\r\n"
		"            textField -edit -bgc 0.6 0.6 0.8 -tx $selObjShape[0] \"cm_t_driverObj\";\r\n"
		"            setAttr ($nodeName[0] + \".offsetX\") 0;\r\n"
		"            setAttr ($nodeName[0] + \".offsetY\") 0;\r\n"
		"            setAttr ($nodeName[0] + \".offsetZ\") 0;\r\n"
		"            \r\n"
		"            connectAttr -f ( $selObjShape[0] + \".worldMesh[0]\") ( $nodeName[0] + \".referenceMesh\");\r\n"
		"            \r\n"
		"        }\r\n"
		"        \r\n"
		"        if($isSame == 1)\r\n"
		"        {\r\n"
		"            warning -n \"[ClonerMulti] Reference mesh can't be the same as the output/input meshes!\";\r\n"
		"        }\r\n"
		"    }\r\n"
		"    \r\n"
		"    else\r\n"
		"    {\r\n"
		"        warning -n \"[ClonerMulti] Nothing selected / Select only one object!\";\r\n"
		"    }\r\n"
		"}\r\n"
		"global proc AE_cm_objList_refresh(string $attrName)\r\n"
		"{\r\n"
		"    \r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    \r\n"
		"    \r\n"
		"    int $currSelIdx[] = `textScrollList -query -sii \"cm_list_objList\"`;\r\n"
		"    \r\n"
		"    textScrollList -edit -ra \"cm_list_objList\";\r\n"
		"    \r\n"
		"    string $inMeshes[] = `listConnections -s true ($nodeName[0] + \".inMesh\")`;\r\n"
		"    \r\n"
		"    for( $i=0; $i<size($inMeshes); ++$i )\r\n"
		"	{\r\n"
		"	    textScrollList -edit -append $inMeshes[$i] \"cm_list_objList\";\r\n"
		"	}\r\n"
		"	\r\n"
		"	if($currSelIdx[0] != 0)\r\n"
		"	{\r\n"
		"	    textScrollList -edit -sii $currSelIdx[0] \"cm_list_objList\";\r\n"
		"	}\r\n"
		"	\r\n"
		"	\r\n"
		"}\r\n"
		"global proc AE_cm_abLoc_create(string $attrName)\r\n"
		"{\r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    \r\n"
		"    separator -height 5 -style \"in\";\r\n"
		"    iconTextButton -style \"iconAndTextHorizontal\" -image1 \"shellModNode_Apply.png\" -label \"Create A-B loc\" -c  (\"AE_cm_abLoc_set \" + $nodeName[0] ) \"cm_b_createABLoc\";\r\n"
		"    separator -height 5 -style \"in\";\r\n"
		"    \r\n"
		"}\r\n"
		"global proc AE_cm_abLoc_edit(string $attrName)\r\n"
		"{\r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    \r\n"
		"    iconTextButton -edit -c (\"AE_cm_abLoc_set \" + $nodeName[0] ) \"cm_b_createABLoc\";\r\n"
		"    \r\n"
		"}\r\n"
		"global proc AE_cm_abLoc_set(string $attrName)\r\n"
		"{\r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"   \r\n"
		"    clonerMultiCommand -ab -cm $nodeName[0];\r\n"
		"    \r\n"
		"}\r\n"
		"global proc AE_cm_bakeObjects_create(string $attrName)\r\n"
		"{\r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    \r\n"
		"    separator -height 5 -style \"in\";\r\n"
		"	iconTextButton -style \"iconAndTextHorizontal\" -image1 \"shellModNode_Trash.png\" -label \"Bake objects to Instances\" -bgc 0.6 0.2 0.3 -c  (\"AE_cm_bakeObjects_doBake \" + $nodeName[0] ) \"cm_b_bake\";\r\n"
		"    separator -height 5 -style \"in\";\r\n"
		"    \r\n"
		"}\r\n"
		"global proc AE_cm_bakeObjects_edit(string $attrName)\r\n"
		"{\r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    iconTextButton -edit -c (\"AE_cm_bakeObjects_doBake \" + $nodeName[0] ) \"cm_b_bake\";\r\n"
		"}\r\n"
		"global proc AE_cm_bakeObjects_doBake(string $attrName)\r\n"
		"{\r\n"
		"    \r\n"
		"    string $nodeName[];\r\n"
		"    tokenize($attrName, \".\", $nodeName);\r\n"
		"    \r\n"
		"    warning -n \"[ClonerMulti] Baking to Instances, Please wait...\";\r\n"
		"    \r\n"
		"    string $commStr = `getAttr ($nodeName[0]+\".outputString\")`;\r\n"
		"    eval $commStr;\r\n"
		"    delete $nodeName[0];\r\n"
		"    \r\n"
		"}\r\n";

	return s_aeTemplate;

}

MString mel_createShelf()
{

	MString s_aeTemplate = MString() + "int $cc_doesShelfExist = `shelfLayout -query -ex \"CreativeCase\"`;\n" +
		"if ($cc_doesShelfExist == 1)\n" +
		"{\n" +
		"    \n" +
		"    string $shelfButtons[] = `shelfLayout -q -ca \"CreativeCase\"`;\n" +
		"    \n" +
		"    int $ex_b01,$ex_b02,$ex_b03 = 0;\n" +
		"    \n" +
		"    for( $i=0; $i<size($shelfButtons); ++$i )\n" +
		"{\n" +
		"    if( `control -exists $shelfButtons[$i]` == true)\n" +
		"    {\n" +
		"         if (`control -q -docTag $shelfButtons[$i]` == \"sm_createSmButton\") {$ex_b01 = 1;}\n" +
		"         if (`control -q -docTag $shelfButtons[$i]` == \"sm_addSmButton\") {$ex_b02 = 1;}\n" +
		"         if (`control -q -docTag $shelfButtons[$i]` == \"sm_createPlaneSmButton\") {$ex_b03 = 1;}\n" +
		"    }\n" +
		"    \n" +
		"}\n" +
		"if ($ex_b01 == 0) {shelfButton -p \"CreativeCase\" -dtg \"sm_createSmButton\" -annotation \"Add a ShellMod modifier to the selected objects\" -image1 \"shellModNode.png\" -command \"shellModCommand\";}\n" +
		"if ($ex_b02 == 0) {shelfButton -p \"CreativeCase\" -dtg \"sm_addSmButton\" -annotation \"Add the objects to the first selected ShellMod node\" -image1 \"shellModNode_Add.png\" -command \"shellModCommand -a\";}\n" +
		"if ($ex_b03 == 0) {shelfButton -p \"CreativeCase\" -dtg \"sm_createPlaneSmButton\" -annotation \"Creates a polygon plane with a ShellMod\" -image1 \"shellModNode_Plane.png\" -command \"polyPlane -sx 1 -sy 1 -w 5 -h 5;shellModCommand;move -y 1\";}\n" +
		"    \n" +
		"}\n" +
		"if ($cc_doesShelfExist == false)\n" +
		"{\n" +
		"    shelfLayout -cellWidth 33 -cellHeight 33 -p $gShelfTopLevel CreativeCase;\n" +
		"    shelfButton -p \"CreativeCase\" -dtg \"sm_createSmButton\" -annotation \"Add a ShellMod modifier to the selected objects\" -image1 \"shellModNode.png\" -command \"shellModCommand\";\n" +
		"    shelfButton -p \"CreativeCase\" -dtg \"sm_addSmButton\" -annotation \"Add the objects to the first selected ShellMod node\" -image1 \"shellModNode_Add.png\" -command \"shellModCommand -a\";\n" +
		"    shelfButton -p \"CreativeCase\" -dtg \"sm_createPlaneSmButton\" -annotation \"Creates a polygon plane with a ShellMod\" -image1 \"shellModNode_Plane.png\" -command \"polyPlane -sx 1 -sy 1 -w 5 -h 5;shellModCommand;move -y 1\";\n" +
		"};\n";

	return s_aeTemplate;
}

MString mel_deleteShelf()
{

	MString s_shelf = 
		"int $cc_doesShelfExist;\
		$cc_doesShelfExist = `shelfLayout -query -ex \"CreativeCase\"`;\
		\
		if ($cc_doesShelfExist == true)\
		{\
		deleteUI CreativeCase;\
		}\
		";

	return s_shelf;
}

#endif